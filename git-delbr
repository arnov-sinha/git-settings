#!/bin/bash -p
#
# Put together the usual steps for getting a local checkout of a previously
# existing remote branch
#
branch=$(git symbolic-ref --short HEAD)

printf "\n(Running 'git fetch --all --prune' on branch \'$branch\')\n\n" 1>&2
if git fetch --all --prune ; then
    printf "\n('git fetch --all --prune' completed successfully)\n" 1>&2
else
    printf "\nError in 'git fetch --all --prune'\n" 1>&2
    exit 1
fi

if [ "$1" != "" ] ; then
    if [ "$branch" != "master" ] ; then
        # Switch to master branch and do git pull again
        printf "\n(Switching to master branch, \'git checkout master')\n\n" 1>&2
        if git checkout master ; then
            printf "\n('git checkout master' completed successfully)\n" 1>&2
        else
            printf "\nError in 'git checkout master'\n" 1>&2
            exit 2
        fi

        printf "\n(Running 'git pull' on master branch)\n\n" 1>&2

        if git pull ; then
            printf "\n('git pull' completed successfully)\n" 1>&2
        else
            printf "\nError in 'git pull'\n" 1>&2
            exit 3
        fi
    fi

    tmp1=$(mktemp)
    tmp2=$(mktemp)
    git branch -a > $tmp1

    printf "\n(Running \'git branch -D $1\')\n\n" 1>&2

    if git branch -D $1 ; then
        printf "\n(\'git branch -D $1\' completed successfully)\n" 1>&2
    else
        printf "\nError in \'git branch -D $1\'\n" 1>&2
    fi

    printf "\n(Running \'git push origin --delete $1\')\n\n" 1>&2

    if git push origin --delete $1 ; then
        printf "\n(\'git push origin --delete $1\' completed successfully)\n" 1>&2
    else
        printf "\nError in \'git push origin --delete $1\'\n" 1>&2
    fi

    git branch -a > $tmp2

    printf "\n(Diffs between old and new branches)\n\n" 1>&2

    diff -u $tmp1 $tmp2

    printf "\n(Running 'git fetch --all --prune')\n\n" 1>&2
    if git fetch --all --prune ; then
        printf "\n('git fetch --all --prune' completed successfully)\n" 1>&2
    else
        printf "\nError in 'git fetch --all --prune'\n" 1>&2
        exit 4
    fi
fi
